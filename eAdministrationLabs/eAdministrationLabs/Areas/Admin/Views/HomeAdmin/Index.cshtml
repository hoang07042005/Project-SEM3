@{
    ViewData["Title"] = "Index";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
}

<div class="text-center mb-4">
    <h1 class="dashboard-title">Admin Dashboard</h1>
    <p class="dashboard-subtitle">Welcome to the administration panel. Manage everything efficiently!</p>
</div>




<div class="row g-3 justify-content-center">
    @foreach (var card in new[] {
    new { Title = "Total Users", Count = ViewData["TotalUsers"], BgColor = "bg-info", Icon = "fas fa-users" },
    new { Title = "Total Requests", Count = ViewData["TotalRequests"], BgColor = "bg-secondary", Icon = "fas fa-file-alt" },
    new { Title = "Completed Requests", Count = ViewData["CompletedRequests"], BgColor = "bg-success", Icon = "fas fa-check-circle" },
    new { Title = "Pending Requests", Count = ViewData["PendingRequests"], BgColor = "bg-warning", Icon = "fas fa-clock" },
    new { Title = "Total Classes", Count = ViewData["TotalClasses"], BgColor = "bg-dark", Icon = "fas fa-chalkboard-teacher" }
    })
    {
        <div class="col-12 col-sm-6 col-md-4 col-lg-2 d-flex">
            <div class="card text-white @card.BgColor w-100">
                <div class="card-body d-flex align-items-center">
                    <i class="@card.Icon fa-2x me-3"></i>
                    <div>
                        <h5 class="card-title">@card.Title</h5>
                        <p class="card-text display-6">@card.Count</p>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

<div class="row mt-4">
    <div class="col-md-12">
        <canvas id="myChart"></canvas>
    </div>
</div>


<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
    document.addEventListener("DOMContentLoaded", function () {
        const data = [
    @ViewData["TotalUsers"],
    @ViewData["TotalRequests"],
    @ViewData["CompletedRequests"],
    @ViewData["PendingRequests"],
    @ViewData["TotalClasses"]
        ];

        // Tính phần trăm thay đổi
        const percentChanges = data.map((value, index, array) => {
            if (index === 0) return 0; // Không có thay đổi cho giá trị đầu tiên
            return (((value - array[index - 1]) / array[index - 1]) * 100).toFixed(2); // Tính % thay đổi
        });

        const ctx = document.getElementById('myChart').getContext('2d');
        new Chart(ctx, {
            type: 'line',
            data: {
                labels: ['Total Users', 'Total Requests', 'Completed Requests', 'Pending Requests', 'Total Classes'],
                datasets: [{
                    label: 'Statistics',
                    data: data,
                    fill: false,
                    borderColor: 'rgba(75, 192, 192, 1)',
                    backgroundColor: 'rgba(75, 192, 192, 0.2)',
                    tension: 0.3,
                    pointBackgroundColor: 'rgba(75, 192, 192, 1)',
                    pointBorderColor: '#fff',
                    pointRadius: 5
                }]
            },
            options: {
                responsive: true,
                plugins: {
                    legend: {
                        display: true,
                        position: 'top'
                    },
                    tooltip: {
                        callbacks: {
                            label: function (context) {
                                const index = context.dataIndex;
                                const value = context.raw;
                                const percentChange = percentChanges[index];
                                return `${context.dataset.label}: ${value} (${percentChange}% change)`;
                            }
                        }
                    }
                },
                scales: {
                    x: {
                        title: {
                            display: true,
                            text: 'Chart',
                            font: {
                                size: 14,
                                weight: 'bold'
                            }
                        }
                    },
                    y: {
                        beginAtZero: true,
                        title: {
                            display: true,
                            text: 'Values',
                            font: {
                                size: 14,
                                weight: 'bold'
                            }
                        },
                        ticks: {
                            callback: function (value) {
                                return Math.floor(value); // Bỏ phần thập phân
                            },
                            stepSize: 1
                        }
                    }
                }
            }
        });
    });
</script>



<style>
    body {
        background-color: #f8f9fa;
    }

    .card {
        border-radius: 10px;
        min-height: 100px;
    }

    .alert {
        margin-bottom: 20px;
    }


    .dashboard-title {
        font-size: 3rem; /* Tăng kích thước chữ */
        font-weight: bold; /* Làm chữ đậm */
        color: #343a40; /* Màu chữ đậm */
        text-transform: uppercase; /* Viết hoa tất cả */
        letter-spacing: 2px; /* Tạo khoảng cách giữa các chữ */
        text-shadow: 2px 2px 5px rgba(0, 0, 0, 0.1); /* Đổ bóng chữ */
    }

    .dashboard-subtitle {
        font-size: 1.2rem; /* Kích thước nhỏ hơn */
        color: #6c757d; /* Màu xám nhạt */
        margin-top: 10px; /* Thêm khoảng cách phía trên */
    }

</style>