@using X.PagedList;
@using X.PagedList.Mvc.Core;
@model X.PagedList.IPagedList<eAdministrationLabs.Models.Notification>

<link href="~/layoutlabs/css/bg_title.css" rel="stylesheet" />
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet" />
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">

<div class="background-image">
    <div class="content text-center py-5">
        <h3 class="display-4 text-white">Notification</h3>
    </div>
</div>

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-lg-10">
            <div class="card shadow-sm" style="background-color: #f7f7f7;">
                <div class="card-body">
                    <table class="table table-striped table-hover">
                        <thead>
                            <tr>
                                <th>Message</th>
                                <th>Status</th>
                                <th>Created At</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var notification in Model.OrderByDescending(n => n.ReadStatus == "Unread"))
                            {
                                <tr id="notification-@notification.Id">
                                    <td>@notification.Message</td>
                                    <td id="status-@notification.Id">
                                        @if (notification.ReadStatus == "Unread")
                                        {
                                            <span class="badge bg-warning text-dark">Unread</span>
                                        }
                                        else
                                        {
                                            <span class="badge bg-success text-white">Read</span>
                                        }
                                    </td>
                                    <td>@notification.CreatedAt</td>
                                    <td>
                                        <div class="d-flex justify-content-start">
                                            @if (notification.RequestId.HasValue)
                                            {
                                                <a href="@Url.Action("Details", "Request", new { id = notification.RequestId })" class="text-dark mx-2">
                                                    <i class="fas fa-info-circle"></i> Request Details
                                                </a>
                                            }
                                            else if (notification.LabUsageLogId.HasValue)
                                            {
                                                <a href="@Url.Action("Details", "LabUsageLogs", new { id = notification.LabUsageLogId })" class="text-dark mx-2">
                                                    <i class="fas fa-info-circle"></i> Reservation Details
                                                </a>
                                            }
                                            else
                                            {
                                                <span class="text-muted">No inquiries or room registrations</span>
                                            }
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>

            <div class="d-flex justify-content-end mt-4">
                @Html.PagedListPager(Model, page => Url.Action("Notifications", new { page = page }), new PagedListRenderOptions
           {
               LiElementClasses = new List<string> { "page-item" },
               PageClasses = new List<string> { "page-link" }
           })
            </div>
        </div>
    </div>
</div>
