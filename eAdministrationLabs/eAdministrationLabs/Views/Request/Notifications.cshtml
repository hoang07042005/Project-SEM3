@* @model IEnumerable<eAdministrationLabs.Models.Notification> *@
@using X.PagedList;
@using X.PagedList.Mvc.Core;
@model X.PagedList.IPagedList<eAdministrationLabs.Models.Notification>

<link href="~/layoutlabs/css/bg_title.css" rel="stylesheet" />


<div class="background-image">
    <div class="content">
        <h3>Notification</h3>
    </div>
</div>


<div class="container mt-4">
<table class="table">
    <thead>
        <tr>
            <th>Message</th>
            <th>Status</th>
            <th>Created At</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var notification in Model.OrderByDescending(n => n.ReadStatus == "Unread"))
        {
            <tr id="notification-@notification.Id">
                <td>@notification.Message</td>
                <td id="status-@notification.Id">
                    @if (notification.ReadStatus == "Unread")
                    {
                        <span class="badge bg-warning"> Unread </span>
                    }
                    else
                    {
                        <span class="badge bg-success">  Read </span>
                    }
                </td>
                <td>@notification.CreatedAt</td>

                <td>
                    @if (notification.RequestId.HasValue)
                    {
                        <a href="@Url.Action("Details", "Request", new { id = notification.RequestId })" class="btn btn-info btn-sm">
                            Request details
                        </a>
                    }
                    else if (notification.LabUsageLogId.HasValue)
                    {
                        <a href="@Url.Action("Details", "LabUsageLogs", new { id = notification.LabUsageLogId })" class="btn btn-info btn-sm">
                            Reservation details
                        </a>
                    }
                    else
                    {
                        <span>There are no inquiries or room registrations involved</span>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>
</div>

<div class="d-flex justify-content-end" style="margin-top: 5vh; margin-right:20vh;">
    @Html.PagedListPager(Model, page => Url.Action("Notifications", new { page = page }), new PagedListRenderOptions
{
    LiElementClasses = new List<string> { "page-item" },
    PageClasses = new List<string> { "page-link" }
})
</div>
