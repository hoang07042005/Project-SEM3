@* @using X.PagedList;
@using X.PagedList.Mvc.Core;
@model X.PagedList.IPagedList<eAdministrationLabs.Models.ViewModels.RequestViewModel>

@{
    ViewBag.Title = "My Requests";
    var statusFilter = ViewBag.StatusFilter as string ?? "All";
    var availableStatuses = ViewBag.AvailableStatuses as List<string> ?? new List<string>();
}




<link href="~/css/custom.css" rel="stylesheet" />
<link href="~/layoutlabs/css/bg_title.css" rel="stylesheet" />

<div class="background-image">
    <div class="content">
        <h3>Request / My Request</h3>
    </div>
</div>

<div class="container py-4">
    <div class="d-flex">
        <!-- Sidebar Filter -->
        <div class="col-md-3 me-3 mb-4">
            <form method="get" asp-action="MyRequest" asp-controller="Request">
                <label for="statusFilter" class="form-label">Requirements by status:</label>
                <select id="statusFilter" name="statusFilter" class="form-select" onchange="this.form.submit()">
                    <!-- Show 'All' when no filter is selected -->
                    @if (string.IsNullOrEmpty(Context.Request.Query["statusFilter"]))
                    {
                        <option value="" selected>All</option>
                    }

                    <!-- Display each status with descriptive text -->
                    @foreach (var status in availableStatuses)
                    {
                        string displayText = status switch
                        {
                            "Pending" => "Your request is pending.",
                            "Approved" => "Your request is approved.",
                            "In Progress" => "Your request is in progress.",
                            "Complete" => "Your request is complete.",
                            "Reject" => "Your request is denied.",
                            _ => status
                        };

                        <option value="@status" selected="@(Context.Request.Query["statusFilter"] == status)">
                            @displayText
                        </option>
                    }
                </select>
            </form>
        </div>



        <!-- Requests List -->
        <div class="flex-grow-1 bg-white p-3" style="border-radius: 10px; box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1);">
            
            <div style="margin-top:20px; margin-left:20px; margin-bottom:10px;">
                <h2 class="text-lg font-semibold mb-4">My requests</h2>
                <p class="text-gray-600 mb-4">Requests / My requests</p>
            </div>
            </br>

            <div class="overflow-x-auto" >
                @if (Model.Any())
                {
                    <table class="min-w-full bg-white">
                        <thead>
                            <tr class="text-white" style="background-color: #2e3031;">
                                <th class="py-2 px-4">Lab</th>
                                <th class="py-2 px-4">Equipment</th>
                                <th class="py-2 px-4">Status</th>
                                <th class="py-2 px-4">Notes</th>
                                <th class="py-2 px-4">Image</th>
                                <th class="py-2 px-4">Created At</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var request in Model)
                            {
                                <tr class="border-b">
                                    <td class="py-2 px-4">@request.LabName</td>
                                    <td class="py-2 px-4">@request.EquipmentName</td>
                                    <td class="py-2 px-4">
                                        @if
                                       (request.StatusName == "Pending")
                                        {
                                            <span class="badge bg-warning text-dark">@request.StatusName</span>
                                        }
                                        
                                        else if (request.StatusName == "Approved")
                                        {
                                            <span class="badge bg-primary">@request.StatusName</span>
                                        }
                                        else if (request.StatusName == "In Progress")
                                        {
                                            <span class="badge badge-in-progress">@request.StatusName</span>
                                        }
                                        else if (request.StatusName == "Complete")
                                        {
                                        <span class="badge bg-success">@request.StatusName</span>
                                        }
                                        else if (request.StatusName == "Reject")
                                        {
                                            <span class="badge bg-danger">@request.StatusName</span>
                                        }
                                        else
                                        {
                                            <span class="badge bg-secondary">@request.StatusName</span>
                                        }
                                    </td>

                                    <td class="py-2 px-4">@request.Notes</td>
                                    <td class="py-2 px-4">
                                        @if (!string.IsNullOrEmpty(request.ImageBase64))
                                        {
                                            <img src="data:image/png;base64,@request.ImageBase64" alt="Request Image" class="img-thumbnail" style="max-height: 70px; max-width: 70px;" onclick="showImage(this)" />
                                        }
                                        else
                                        {
                                            <span>No Image</span>
                                        }
                                    </td>
                                    <td class="py-2 px-4">@request.CreatedAt.ToString("dd/MM/yyyy HH:mm")</td>
                                   
                                </tr>
                            }
                        </tbody>
                    </table>
                }
                else
                {
                    <div class="alert alert-warning" role="alert">
                        You have no requests.
                    </div>
                }
                <div class="d-flex justify-content-end" style="margin-top: 5vh; margin-right:20vh;">
                    @Html.PagedListPager(Model, page => Url.Action("MyRequest", new { page = page }), new PagedListRenderOptions
                {
                   LiElementClasses = new List<string> { "page-item" },
                   PageClasses = new List<string> { "page-link" }
                })
                </div>
            </div>
        </div>
    </div>
</div>


<script type="text/javascript">
    function showImage(imgElement) {
        var src = imgElement.src;
        var modal = document.createElement('div');
        modal.id = 'imageModal';
        modal.style.position = 'fixed';
        modal.style.top = '50%';
        modal.style.left = '50%';
        modal.style.transform = 'translate(-50%, -50%)';
        modal.style.backgroundColor = 'rgba(0, 0, 0, 0.8)';
        modal.style.zIndex = '1000';
        modal.style.padding = '20px';
        modal.style.borderRadius = '10px';
        modal.style.textAlign = 'center';
        modal.style.overflow = 'hidden';

        var img = document.createElement('img');
        img.src = src;
        img.style.maxWidth = '90%';
        img.style.maxHeight = '90%';
        img.style.borderRadius = '5px';

        var closeBtn = document.createElement('button');
        closeBtn.innerHTML = 'Close';
        closeBtn.style.position = 'absolute';
        closeBtn.style.top = '10px';
        closeBtn.style.right = '10px';
        closeBtn.style.padding = '5px 10px';
        closeBtn.style.backgroundColor = 'rgba(0, 0, 0, 0.5)';
        closeBtn.style.color = 'white';
        closeBtn.style.border = 'none';
        closeBtn.style.borderRadius = '5px';
        closeBtn.onclick = function () {
            document.body.removeChild(modal);
        };

        modal.appendChild(img);
        modal.appendChild(closeBtn);

        document.body.appendChild(modal);
    }
</script>


  *@




@using X.PagedList;
@using X.PagedList.Mvc.Core;
@model X.PagedList.IPagedList<eAdministrationLabs.Models.ViewModels.RequestViewModel>

@{
    ViewBag.Title = "My Requests";
    var statusFilter = ViewBag.StatusFilter as string ?? "All";
    var availableStatuses = ViewBag.AvailableStatuses as List<string> ?? new List<string>();
}

<link href="~/css/custom.css" rel="stylesheet" />
<link href="~/layoutlabs/css/bg_title.css" rel="stylesheet" />

<link href="~/layoutlabs/css/request/myrequest.css" rel="stylesheet" />
<link href="https://cdn.jsdelivr.net/npm/select2@4.0.13/dist/css/select2.min.css" rel="stylesheet" />

<div class="background-image">
    <div class="content">
        <h3>Request / My Request</h3>
    </div>
</div>
<div class="container py-4">
    <div class="d-flex">
        <!-- Sidebar Filter -->
        <div class="col-md-3 me-3 mb-4 p-0" style="max-width: 250px; margin-left: 0;">
            <form method="get" asp-action="MyRequest" asp-controller="Request">
                <label for="statusFilter" class="form-label" style="font-size: 16px; color: #495057;">Requirements by status:</label>
                <select id="statusFilter" name="statusFilter" class="form-select" onchange="this.form.submit()">
                    @foreach (var status in availableStatuses)
                    {
                        string displayText = status switch
                        {
                            "Pending" => "Pending",
                            "Approved" => "Approved",
                            "In Progress" => "In Progress",
                            "Complete" => "Complete",
                            "Reject" => "Reject",
                            _ => status
                        };

                        <option value="@status" selected="@(Context.Request.Query["statusFilter"] == status)">
                            @displayText
                        </option>
                    }
                </select>
                <div class="row">
                    <div class="col-md-12 text-white">
                        <p>Your total requests: @ViewBag.TotalRequests</p>
                        <p>Total requests denied: @ViewBag.RejectedRequests</p>
                    </div>
                </div>
            </form>
            
        </div>

       

        <!-- My Requests -->
        <!-- My Requests -->
        <div class="flex-grow-1 bg-white text-dark p-3" style="border-radius: 10px; box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1); margin-left: 20px; width: 75%;">
            <div style="margin-top:20px; margin-left:20px; margin-bottom:10px;">
                <h2 class="text-lg font-semibold mb-4">My Requests</h2>
                <p class="text-gray-600 mb-4">Requests / My Requests</p>
            </div>

            <div class="overflow-x-auto">
                @if (Model.Any())
                {
                    <table class="min-w-full bg-white">
                        <thead>
                            <tr class="bg-dark text-white">
                                <th class="py-2 px-4" style="background-color: #333; color: #f8f9fa; font-weight: bold;">Lab</th>
                                <th class="py-2 px-4" style="background-color: #333; color: #f8f9fa; font-weight: bold;">Equipment</th>
                                <th class="py-2 px-4" style="background-color: #333; color: #f8f9fa; font-weight: bold;">Status</th>
                                <th class="py-2 px-4" style="background-color: #333; color: #f8f9fa; font-weight: bold;">Notes</th>
                                <th class="py-2 px-4" style="background-color: #333; color: #f8f9fa; font-weight: bold;">Image</th>
                                <th class="py-2 px-4" style="background-color: #333; color: #f8f9fa; font-weight: bold;">Created At</th>
                            </tr>
                        </thead>

                        <tbody>
                            @foreach (var request in Model)
                            {
                                <tr class="border-b">
                                    <td class="py-2 px-4">@request.LabName</td>
                                    <td class="py-2 px-4">@request.EquipmentName</td>
                                    <td class="py-2 px-4">
                                        @if (request.StatusName == "Pending")
                                        {
                                            <span class="badge bg-danger text-white">@request.StatusName</span> 
                                        }
                                        else if (request.StatusName == "Approved")
                                        {
                                            <span class="badge bg-success text-white">@request.StatusName</span>
                                        }
                                        else if (request.StatusName == "In Progress")
                                        {
                                            <span class="badge bg-warning text-white">@request.StatusName</span> 
                                        }
                                        else if (request.StatusName == "Complete")
                                        {
                                            <span class="badge bg-primary text-white">@request.StatusName</span> 
                                        }
                                        else if (request.StatusName == "Reject")
                                        {
                                            <span class="badge bg-secondary text-white">@request.StatusName</span> 
                                        }
                                        else
                                        {
                                            <span class="badge bg-light text-dark">@request.StatusName</span> 
                                        }
                                    </td>

                                    <td class="py-2 px-4">@request.Notes</td>
                                    <td class="py-2 px-4">
                                        @if (!string.IsNullOrEmpty(request.ImageBase64))
                                        {
                                            <img src="data:image/png;base64,@request.ImageBase64" alt="Request Image" class="img-thumbnail" style="max-height: 70px; max-width: 70px;" onclick="showImage(this)" />
                                        }
                                        else
                                        {
                                            <span>No Image</span>
                                        }
                                    </td>
                                    <td class="py-2 px-4">@request.CreatedAt.ToString("dd/MM/yyyy HH:mm")</td>
                                </tr>
                            }
                        </tbody>

                    </table>
                }
                else
                {
                    <div class="alert alert-warning" role="alert">
                        You have no requests.
                    </div>
                }
                <div class="d-flex justify-content-end" style="margin-top: 5vh; margin-right:20vh;">
                    @Html.PagedListPager(Model, page => Url.Action("MyRequest", new { page = page }), new PagedListRenderOptions
               {
                   LiElementClasses = new List<string> { "page-item" },
                   PageClasses = new List<string> { "page-link" }
               })
                </div>
            </div>
        </div>

    </div>
</div>

<!-- Modal Image Viewer Script -->
<script type="text/javascript">
    $(document).ready(function () {
        // Khởi tạo Select2
        $('#statusFilter').select2({
            width: '100%',  // Đảm bảo Select2 chiếm toàn bộ chiều rộng
            placeholder: "Select a status",  // Thêm placeholder nếu cần
            allowClear: true // Cho phép xóa lựa chọn
        });
    });

    function showImage(imgElement) {
        var src = imgElement.src;
        var modal = document.createElement('div');
        modal.id = 'imageModal';
        modal.style.position = 'fixed';
        modal.style.top = '50%';
        modal.style.left = '50%';
        modal.style.transform = 'translate(-50%, -50%)';
        modal.style.backgroundColor = 'rgba(0, 0, 0, 0.8)';
        modal.style.zIndex = '1000';
        modal.style.padding = '20px';
        modal.style.borderRadius = '10px';
        modal.style.textAlign = 'center';
        modal.style.overflow = 'hidden';

        var img = document.createElement('img');
        img.src = src;
        img.style.maxWidth = '90%';
        img.style.maxHeight = '90%';
        img.style.borderRadius = '5px';

        var closeBtn = document.createElement('button');
        closeBtn.innerHTML = 'Close';
        closeBtn.style.position = 'absolute';
        closeBtn.style.top = '10px';
        closeBtn.style.right = '10px';
        closeBtn.style.padding = '5px 10px';
        closeBtn.style.backgroundColor = 'rgba(0, 0, 0, 0.5)';
        closeBtn.style.color = 'white';
        closeBtn.style.border = 'none';
        closeBtn.style.borderRadius = '5px';
        closeBtn.onclick = function () {
            document.body.removeChild(modal);
        };

        modal.appendChild(img);
        modal.appendChild(closeBtn);

        document.body.appendChild(modal);
    }
</script>

