@using X.PagedList
@using X.PagedList.Mvc.Core
@model X.PagedList.IPagedList<eAdministrationLabs.Models.ViewModels.RequestViewModel>

@{
    ViewData["Title"] = "Request List";
    Layout = "~/Views/Shared/_LayoutLabs.cshtml";
}

<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet" />
<link href="~/layoutlabs/css/bg_title.css" rel="stylesheet" />
<style>
    .container {
        max-width: 1100px;
        margin: 0 auto;
    }

    .table {
        margin-top: 20px;
        border-collapse: collapse;
        width: 100%;
    }

        .table th, .table td {
            padding: 12px;
            text-align: center;
            border: 1px solid #ddd;
        }

        .table th {
            background-color: #f4f4f4;
            font-weight: bold;
        }

        .table tr:hover {
            background-color: #f9f9f9;
        }

        .table img {
            cursor: pointer;
            max-height: 60px;
            max-width: 60px;
            border-radius: 5px;
            transition: transform 0.3s;
        }

            .table img:hover {
                transform: scale(1.1);
            }

    .btn {
        padding: 10px 15px;
        font-size: 14px;
        border-radius: 5px;
        text-transform: uppercase;
    }

    .btn-dark {
        background-color: #343a40;
        color: white;
        border: none;
    }

        .btn-dark:hover {
            background-color: #495057;
        }

    .pagination {
        display: flex;
        justify-content: center;
        margin-top: 20px;
    }

        .pagination .page-item .page-link {
            color: #343a40;
            border-radius: 5px;
            padding: 5px 10px;
            margin: 0 5px;
            text-decoration: none;
        }

        .pagination .page-item.active .page-link {
            background-color: #343a40;
            color: white;
        }

    #imageModal {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0, 0, 0, 0.8);
        display: flex;
        align-items: center;
        justify-content: center;
        z-index: 1000;
    }

        #imageModal img {
            max-width: 90%;
            max-height: 90%;
            border-radius: 5px;
        }

        #imageModal button {
            position: absolute;
            top: 20px;
            right: 20px;
            padding: 8px 12px;
            background: #343a40;
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
        }
</style>

<div class="background-image">
    <div class="content">
        <h3>Request / View All Requests</h3>
    </div>
</div>

<div class="container mt-4">
    <div class="card">
        <a asp-action="Create" class="btn btn-dark mb-3">Create New Request</a>

        @if (Model.Any())
        {
            <div class="table-responsive">
                <table class="table">
                    <thead>
                        <tr>
                            <th>#</th>
                            <th>Lab Name</th>
                            <th>Equipment</th>
                            <th>User Name</th>
                            <th>Status</th>
                            <th>Changed By</th>
                            <th>Notes</th>
                            <th>Created At</th>
                            <th>Image</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var request in Model)
                        {
                            <tr>
                                <td>@request.Id</td>
                                <td>@request.LabName</td>
                                <td>@request.EquipmentName</td>
                                <td>@request.UserName</td>
                                <td>@request.StatusName</td>
                                <td>@request.ChangedBy</td>
                                <td>@request.Notes</td>
                                <td>@request.CreatedAt.ToString("yyyy-MM-dd HH:mm:ss")</td>
                                <td>
                                    @if (!string.IsNullOrEmpty(request.ImageBase64))
                                    {
                                        <img src="data:image/png;base64,@request.ImageBase64" alt="Request Image" onclick="showImage(this)" />
                                    }
                                    else
                                    {
                                        <span>No Image</span>
                                    }
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
            <div class="pagination">
                @Html.PagedListPager(Model, page => Url.Action("Index", new { page }), new PagedListRenderOptions
       {
           LiElementClasses = new List<string> { "page-item" },
           PageClasses = new List<string> { "page-link" }
       })
            </div>
        }
        else
        {
            <p class="text-muted text-center">No requests found. Click "Create New Request" to get started.</p>
        }
    </div>
</div>

<script>
    function showImage(imgElement) {
        const modal = document.createElement('div');
        modal.id = 'imageModal';

        const img = document.createElement('img');
        img.src = imgElement.src;

        const closeButton = document.createElement('button');
        closeButton.textContent = 'Close';
        closeButton.onclick = () => document.body.removeChild(modal);

        modal.appendChild(img);
        modal.appendChild(closeButton);
        document.body.appendChild(modal);
    }
</script>
